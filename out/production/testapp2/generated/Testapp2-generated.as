
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    
 *  Class:      Testapp2
 *  Source:     /home/jamesw/projects/GorillaPatching/testapp2/src/Testapp2.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2011.02.17 19:13:29 MST
 */

package 
{

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.mx_internal;
import mx.events.FlexEvent;
import mx.filters.*;
import mx.styles.*;
import spark.components.Application;



    [Patcher(type="RevealPrivatesPatcher", fullClassName="blah.Foo", propertyOrMethodName="getPrivateBar")]
  
[Frame(extraClass="_Testapp2_FlexInit")]

[Frame(factoryClass="_Testapp2_mx_managers_SystemManager")]


//  begin class def
public class Testapp2
    extends spark.components.Application
{

    //  instance variables

    //  type-import dummies



    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function Testapp2()
    {
        super();





        // layer initializers

       
        // properties


        // events
        this.addEventListener("applicationComplete", ___Testapp2_Application1_applicationComplete);












    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings


        // ambient styles
        mx_internal::_Testapp2_StylesInit();

                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {


        super.initialize();
    }


    //  scripts
    //  <Script>, line 11 - 13

    import blah.Foo;
  

    //  end scripts


    //	supporting function definitions for properties, events, styles, effects
/**
 * @private
 **/
public function ___Testapp2_Application1_applicationComplete(event:mx.events.FlexEvent):void
{
	
    trace("applicationComplete");
    var foo:Foo = new Foo();
    var s:String = foo['getPrivateBar']();
    trace("foo.getPrivateBar() = " + s);
  
}



	//	initialize style defs for Testapp2

	mx_internal var _Testapp2_StylesInit_done:Boolean = false;

	mx_internal function _Testapp2_StylesInit():void
	{
		//	only add our style defs to the style manager once
		if (mx_internal::_Testapp2_StylesInit_done)
			return;
		else
			mx_internal::_Testapp2_StylesInit_done = true;
			
		var style:CSSStyleDeclaration;
		var effects:Array;
			        

        var conditions:Array;
        var condition:CSSCondition;
        var selector:CSSSelector;

		styleManager.initProtoChainRoots();
	}


    //  embed carrier vars
    //  end embed carrier vars


//  end class def
}

//  end package def
}
